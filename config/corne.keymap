/*
 * Custom ZMK Configuration for 5-Column Corne  
 * Dvorak layout with thumb-based layer activation
 * Simplified version for maximum compatibility
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Layer definitions
#define BASE 0
#define NAV  1
#define SYM  2  
#define FN   3

/ {
    chosen {
        zmk,physical-layout = &foostan_corne_5col_layout;
    };

    behaviors {
        /*
         * Optimized homerow modifiers for specific positions
         */
        ctrl_a: control_a {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            bindings = <&kp>, <&kp>;
        };

        ctrl_s: control_s {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            bindings = <&kp>, <&kp>;
        };

        /*
         * GUI modifiers on . and c
         */
        gui_dot: gui_dot {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            bindings = <&kp>, <&kp>;
        };

        gui_c: gui_c {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            bindings = <&kp>, <&kp>;
        };

        /*
         * Alt modifiers for comma and R
         */
        alt_comma: alt_comma {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            bindings = <&kp>, <&kp>;
        };

        alt_r: alt_r {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    /*
     * Combo definitions for enhanced typing efficiency
     */
    combos {
        compatible = "zmk,combos";
        
        // Base layer combos
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;  // ' + ,
            bindings = <&kp ESC>;
            layers = <BASE>;
        };

        combo_dash {
            timeout-ms = <50>;
            key-positions = <1 2>;  // , + .
            bindings = <&kp MINUS>;
            layers = <BASE>;
        };

        // Nav layer combos
        combo_grave {
            timeout-ms = <50>;
            key-positions = <0 1>;  // [ + 7
            bindings = <&kp GRAVE>;
            layers = <NAV>;
        };

        // Sym layer combos  
        combo_tilde {
            timeout-ms = <50>;
            key-positions = <0 1>;  // { + &
            bindings = <&kp TILDE>;
            layers = <SYM>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        /*
         * BASE LAYER: Dvorak with strategic modifier placement
         */
        base_layer {
            display-name = "Dvorak";
            bindings = <
    // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
         &kp SQT       &alt_comma LALT COMMA &gui_dot LGUI DOT &kp P       &kp Y             &kp F         &kp G         &gui_c RGUI C &alt_r RALT R &kp L
    // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
         &ctrl_a LCTRL A  &kp O      &kp E         &kp U         &kp I             &kp D         &kp H         &kp T         &kp N      &ctrl_s RCTRL S
    // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
         &kp FSLH      &kp Q         &kp J         &kp K         &kp X             &kp B         &kp M         &kp W         &kp V         &kp Z
    // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                     &lt SYM TAB   &lt NAV SPACE &kp LSHFT         &mt LSHFT RET &kp BSPC      &lt FN DEL
    //                               ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            >;
        };

        /*
         * NAV LAYER: Numbers, navigation, and brackets  
         * NOTE: del is pure &kp DEL so space+del works cleanly
         */
        nav_layer {
            display-name = "Nav/Num";
            bindings = <
    // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
         &kp LBKT      &kp N7        &kp N8        &kp N9        &kp RBKT          &kp PG_UP     &kp PSCRN     &kp UP        &none         &kp RIGHT
    // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
         &kp SEMI      &kp N4        &kp N5        &kp N6        &kp EQUAL         &kp PG_DN     &kp LEFT      &kp DOWN      &kp RIGHT     &kp N
    // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
         &kp BSLH      &kp N1        &kp N2        &kp N3        &kp N0            &none         &kp HOME      &none         &kp END       &kp CAPS
    // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                     &trans        &trans        &trans            &trans        &trans        &kp DEL
    //                               ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            >;
        };

        /*
         * SYM LAYER: Symbols (left hand only for efficiency)
         */
        sym_layer {
            display-name = "Symbol";
            bindings = <
    // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
         &kp LBRC      &kp AMPS      &kp LPAR      &kp RPAR      &kp RBRC          &none         &none         &none         &none         &none
    // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
         &kp COLON     &kp DLLR      &kp PRCNT     &kp CARET     &kp PLUS          &none         &none         &none         &none         &none
    // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
         &kp PIPE      &kp EXCL      &kp AT        &kp HASH      &kp ASTRK         &none         &none         &none         &none         &none
    // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                     &trans        &trans        &trans            &trans        &trans        &trans
    //                               ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            >;
        };

        /*
         * FN LAYER: Function keys, media controls, and system functions
         * NOTE: space is pure &kp SPACE so you can get repeated spaces
         */
        fn_layer {
            display-name = "Function";
            bindings = <
    // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
         &kp F12       &kp F7        &kp F8        &kp F9        &kp LC(LS(LALT))  &kp C_BRI_UP  &kp C_MUTE    &kp C_VOL_UP  &kp C_PP      &kp C_NEXT
    // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
         &kp F11       &kp F4        &kp F5        &kp F6        &kp LC(GRAVE)     &kp C_BRI_DN  &kp C_PREV    &kp C_VOL_DN  &kp C_NEXT    &kp LG(SPACE)
    // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
         &kp F10       &kp F1        &kp F2        &kp F3        &kp LC(LS(GRAVE)) &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bootloader
    // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                     &kp TAB       &kp SPACE     &trans            &trans        &trans        &trans
    //                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            >;
        };
    };
};